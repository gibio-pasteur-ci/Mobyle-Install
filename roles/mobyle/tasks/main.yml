---
- name: check presence of Mobyle archive
  become: yes
  become_user: "{{ mobyle_user }}"
  stat: path=~/src/Mobyle+BMPS-1.5.5.tar.gz
  register: mobyle_archive

- name: Mobyle Download
  become: yes
  become_user: "{{ mobyle_user }}"
  when: mobyle_archive.stat.exists == False
# because of bug https://github.com/ansible/ansible-modules-core/issues/3661
# on ansible version 2.0.2.0 we can not use get_url : workaround use command
#  get_url: url=ftp://ftp.pasteur.fr/pub/gensoft/projects/mobyle/Mobyle+BMPS-1.5.5.tar.gz dest=~/src/
  command: curl ftp://ftp.pasteur.fr/pub/gensoft/projects/mobyle/Mobyle+BMPS-1.5.5.tar.gz -o ~/src/Mobyle+BMPS-1.5.5.tar.gz

- name: Mobyle Unarchive
  become: yes
  become_user: "{{ mobyle_user }}"
  unarchive: src=~/src/Mobyle+BMPS-1.5.5.tar.gz dest=~/src creates=~/src/Mobyle+BMPS-1.5.5 copy=no

- name: Mobyle Build
  become: yes
  become_user: "{{ mobyle_user }}"
  command: ~/bin/python setup.py build chdir=~/src/Mobyle+BMPS-1.5.5

- name: Add install_core in setup.cfg
  become: yes
  become_user: "{{ mobyle_user }}"
  ini_file: dest=~/src/Mobyle+BMPS-1.5.5/setup.cfg
            section=install
            option=install_core value={{ mobyle_home }}/Mobyle

- name: Add install_cgis in setup.cfg
  become: yes
  become_user: "{{ mobyle_user }}"
  ini_file: dest=~/src/Mobyle+BMPS-1.5.5/setup.cfg
            section=install
            option=install_cgis value={{ mobyle_home }}/web/cgi-bin

- name: Add install_htdocs in setup.cfg
  become: yes
  become_user: "{{ mobyle_user }}"
  ini_file: dest=~/src/Mobyle+BMPS-1.5.5/setup.cfg
            section=install
            option=install_htdocs value={{ mobyle_home }}/web/htdocs

- name: Add install_bmps in setup.cfg
  become: yes
  become_user: "{{ mobyle_user }}"
  ini_file: dest=~/src/Mobyle+BMPS-1.5.5/setup.cfg
            section=install
            option=install_bmps value=1

- name: Mobyle Install
  become: yes
  become_user: "{{ mobyle_user }}"
  command: ~/bin/python setup.py install chdir=~/src/Mobyle+BMPS-1.5.5

- name: Modify PATH
  become: yes
  become_user: "{{ mobyle_user }}"
  lineinfile: dest=~/.bashrc
              insertafter=EOF
              line="export PATH=$HOME/Mobyle/Tools:$HOME/bin:/usr/local/bin:/usr/bin:/bin:$PATH"

- name: Give write permission to apache on htdocs/data
  file: 
   path={{ mobyle_home }}/web/htdocs/data/
   owner={{ mobyle_user }}
   group=apache
   mode=g+w
   state=directory
   recurse=yes

- name: Create Mobyle log directory
  file:
    path={{ mobyle_home }}/log/mobyle
    state=directory
    owner={{ mobyle_user }}
    group=apache
    mode=775
    recurse=yes

- name: Create apache log directory
  file:
    path={{ mobyle_home }}/log/apache
    state=directory
    owner={{ mobyle_user }}
    group=apache
    mode=775

- name: Allow others to go inside /var/log/httpd
  file:
    path=/var/log/httpd/
    mode="o+x"
    state=touch

- name: Create links to apache logs
  file:
    src={{ item }}
    dest={{ mobyle_home }}/log/apache/{{ item | basename }}
    state=link
    force=yes
  with_fileglob:
    - "/var/log/httpd/mobyle*"

- name: add aliases
  become: yes
  become_user: "{{ mobyle_user }}"
  blockinfile:
    dest: ~/.bashrc
    insertafter: EOF
    content: |
      alias job_count='grep "<job id=" .session.xml | wc -l'
      alias data_count="grep  -e '<data .*id=' .session.xml |wc -l"
      alias mobjobs='cat ~/web/mobyle/log/mobyle/access_log | awk "{ print \"...\", \$2, \$3 }" | uniq -c'
      alias mobprog='cat ~/web/mobyle/log/mobyle/access_log | awk "{ print \"...\", \$6 }" | sort | uniq -c | sort -k 1 -n'
      alias mobuser='cat ~/web/mobyle/log/mobyle/access_log | awk "{ print \"...\", \$8 }" | sort | uniq -c | sort -k 1 -n'

- name: Copy htaccess
  become: yes
  become_user: "{{ mobyle_user }}"
  template:
    src=templates/htaccess.j2
    dest=~/web/htdocs/.htaccess
    owner={{ mobyle_user }}
    group=apache
    mode=0644

- name: Configure Mobyle
  become: yes
  become_user: "{{ mobyle_user }}"
  template:
    src=templates/Config.py.j2
    dest={{ mobyle_home }}/Mobyle/Local/Config/Config.py
    owner={{ mobyle_user }}
    group=apache
    mode=0644

- name: Configure Mobyle vhost
  template:
    src=templates/apache_mobyle.conf.j2
    dest=/etc/httpd/conf.d/mobyle.conf
    owner={{ mobyle_user }}
    group=apache
    mode=0644

- name: Copy CustomClasses
  become: yes
  become_user: "{{ mobyle_user }}"
  copy:
    src={{ item }}
    dest={{ mobyle_home }}/Mobyle/Local/CustomClasses
    owner={{ mobyle_user }}
    group=apache
    mode=0644
  with_fileglob:
    - files/Mobyle/Local/CustomClasses/*.py
    
- name: Copy announcement files
  become: yes
  become_user: "{{ mobyle_user }}"
  copy:
    src="{{ item }"
    dest={{ mobyle_home }}/web/portal/html/{{ item | basename }}
    owner={{ mobyle_user }}
    group=apache
    mode=0644
  with_fileglob:
    - files/web/htdocs/portal/html/announcement.txt.*

- name: Create link to empty annoucement file
  become: yes
  become_user: "{{ mobyle_user }}"
  file:
    src={{ mobyle_home }}/web/htdocs/portal/html/announcement.txt.empty
    dest={{ mobyle_home }}/web/htdocs/portal/html/announcement.txt
    state=link
    force=yes

- name: Copy local css file
  become: yes
  become_user: "{{ mobyle_user }}"
  copy:
    src={{ mobyle_home }}/web/portal/css/local.css
    dest={{ mobyle_home }}/web/portal/css/
    owner={{ mobyle_user }}
    group=apache
    mode=0644

- name: Copy script to rotate logs
  copy:
    src={{ item }}
    dest=~/src/bin/
    owner={{ mobyle_user }}
    group=apache
    mode=0750
  with_fileglob:
    - files/bin/*-log

- name: Set up cron
  template:
    src=templates/cron_mobyle.j2
    dest=/etc/cron.d/
    mode=0644

  
